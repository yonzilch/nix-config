# Auto-generated using compose2nix v0.3.1.
{lib, ...}: {
  # Runtime
  virtualisation.podman = {
    enable = true;
    autoPrune.enable = true;
    dockerCompat = true;
    defaultNetwork.settings = {
      # Required for container networking to be able to use names.
      dns_enabled = true;
    };
  };

  # Enable container name DNS for non-default Podman networks.
  # https://github.com/NixOS/nixpkgs/issues/226365
  networking.firewall.interfaces."podman+".allowedUDPPorts = [53];

  virtualisation.oci-containers.backend = "podman";

  # Containers
  virtualisation.oci-containers.containers."ani-rss" = {
    image = "wushuo894/ani-rss:latest";
    environment = {
      "CONFIG" = "/config";
      "PORT" = "7789";
      "TZ" = "Asia/Shanghai";
    };
    volumes = [
      "/volume1/docker/ani-rss/config:/config:rw"
      "/volume2/wushuo/Media:/Media:rw"
    ];
    log-driver = "journald";
    extraOptions = [
      "--network=host"
    ];
  };
  systemd.services."podman-ani-rss" = {
    serviceConfig = {
      Restart = lib.mkOverride 90 "always";
    };
    partOf = [
      "podman-compose-compose2nix-root.target"
    ];
    wantedBy = [
      "podman-compose-compose2nix-root.target"
    ];
  };
  virtualisation.oci-containers.containers."qBittorrent" = {
    image = "linuxserver/qbittorrent:latest";
    environment = {
      "PGID" = "0";
      "PUID" = "0";
      "TZ" = "Asia/Shanghai";
      "WEBUI_PORT" = "8080";
    };
    volumes = [
      "/volume1/docker/qBittorrent/config:/config:rw"
      "/volume2/wushuo/Media:/Media:rw"
      "/volume2/wushuo/downloads:/downloads:rw"
    ];
    log-driver = "journald";
    extraOptions = [
      "--network=host"
    ];
  };
  systemd.services."podman-qBittorrent" = {
    serviceConfig = {
      Restart = lib.mkOverride 90 "always";
    };
    partOf = [
      "podman-compose-compose2nix-root.target"
    ];
    wantedBy = [
      "podman-compose-compose2nix-root.target"
    ];
  };

  # Root service
  # When started, this will automatically create all resources and start
  # the containers. When stopped, this will teardown all resources.
  systemd.targets."podman-compose-compose2nix-root" = {
    unitConfig = {
      Description = "Root target generated by compose2nix.";
    };
    wantedBy = ["multi-user.target"];
  };
}
